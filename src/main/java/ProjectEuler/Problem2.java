package ProjectEuler;

public class Problem2 {

    /*
    Problem 2

    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
    */

    public static void main(String[] args) {

        System.out.println(findSumOfTermsBelowParameter(100));
        System.out.println(findSumOfTermsBelowParameter(4000000));

    }

    public static long findSumOfTermsBelowParameter(int parameter){
        int fiboElem;
        int sum = 0;
        int index = 0;
        while(fibo(index) <= parameter){
            fiboElem = fibo(index);
            if(fiboElem % 2 == 0){
                sum += fiboElem;
            }
            index++;
        }
        return sum;
    }

    private static int fibo(int elemIndex){
        if(elemIndex == 0){
            return 1;
        } else if (elemIndex == 1){
            return 2;
        } else {
            return fibo(elemIndex - 1) + fibo(elemIndex - 2);
        }
    }
}

